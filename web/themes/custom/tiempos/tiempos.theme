<?php

use Drupal\file\Entity\File;
use Drupal\taxonomy\Entity\Term;

/**
 * Preprocess Blocks.
 *
 * @param $variables
 */
function tiempos_preprocess_block(&$variables) {
  if (isset($variables['elements']['#id'])) {
    switch ($variables['elements']['#id']) {
      /* Add classes to some blocks. */
      case 'tiempos_page_title':
      case 'tiempos_content':
        $variables['attributes']['class'][] = 'is-full';
        break;
    }
  }
}

/**
 * Preprocess Nodes.
 *
 * @param $variables
 */
function tiempos_preprocess_node(&$variables) {
  //$site_path = Drupal::service('file_system')->realpath(file_default_scheme() . "://");
  $config = Drupal::config('etype.adminsettings');
  $variables['premium_content_message'] = $config->get('premium_content_message');
  $variables['premium_preview'] = $config->get('premium_preview');
  $variables['premium_content'] = $variables['node']->get('premium_content')->value;
  switch ($variables['node']->getType()) {
    case 'feature':
      $fid = theme_get_setting('inverted_logo');
      if ($fid[0] > 0) {
        $obj = File::load($fid[0]);
        if (is_object($obj)) {
          $inverted_logo = $obj->getFileUri();
          $variables["inverted_logo"] = file_create_url($inverted_logo);
        }
      }
      break;

    case 'article':
      $variables['section'] = '';
      $arr = [];
      $tids = $variables['node']->get('field_section')->getValue();
      if (count($tids) > 0) {
        foreach ($tids as $tid) {
          $term = Term::load($tid[0]["target_id"]);
           $arr[] = ($term->getName());
        }
        $variables['section'] = implode(" ", $arr);
      }
      break;
  }
}

/**
 * @inheritDoc
 *
 * @param $variables
 */
function tiempos_preprocess_input(&$variables) {
  /* Add bulma classes to form elements. */
  switch($variables['attributes']['type']) {
    case "submit":
      $variables['attributes']['class'][] = 'button';
      $variables['attributes']['class'][] = 'is-link';
      break;

    case "text":
    case "password":
    $variables['attributes']['class'][] = 'input';
  }

}

/**
 * Implements hook_theme_suggestions_page_alter().
 * Enables templates like page--article.html.twig.
 *
 * @param array $suggestions
 * @param array $variables
 */
function tiempos_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }
}