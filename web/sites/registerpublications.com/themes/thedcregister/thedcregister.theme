<?php

use Drupal\Core\Render\Markup;
use Drupal\file\Entity\File;
use Drupal\image\Entity\ImageStyle;

/**
 * Implements hook_preprocess_views_view_fields().
 *
 * @param $variables
 */
function thedcregister_preprocess_node(&$variables) {
  // Add new variable that will be available in the template (for images data).
  $variables['slider_images'] = [];
  $caption_data = [];
  $node = $variables['node'];
  if (entityTypeHasField('field_image_captions', 'node')) {
    $captions = $node->get('field_image_captions')->getValue();
    foreach ($captions as $item) {
      $caption_data[] = Markup::create($item['value']);
    }
  }
  $i = 0;
  foreach ($node->get('field_image')->getValue() as $key => $value) {
    $image_data = [
      'title' => $value['title'],
      'alt' => $value['alt'],
      'width' => $value['width'],
      'height' => $value['height'],
      'uri' => '',
      'url' => '',
    ];
    // Load an image file to ger uri.
    $image_file = File::load($value['target_id']);
    if ($image_file) {
      $image_data['uri'] = ImageStyle::load('article_420')->buildUrl($image_file->getFileUri());
      $image_data['url'] = file_create_url($image_data['uri']);
    }
    if (isset($caption_data[$i])) {
      $image_data['caption'] = $caption_data[$i];
    }
    // Store an image data to the new variable for using in template.
    $variables['slider_images'][] = $image_data;
    $i ++;
  }
}
