<?php

use Drupal\node\NodeInterface;
use Drupal\taxonomy\Entity\Term;

/**
 * Preprocess html.
 *
 * @param $variables
 */
function etype_pico_preprocess_html(&$variables) {
  $e_config = Drupal::config('etype.adminsettings');
  $head_script = $e_config->get('head_script');
  $bottom_script = $e_config->get('bottom_script');

  $moduleHandler = Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('etype_pico')) {
    $config = Drupal::config('etype_pico.settings');
    $picoPublisherId = $config->get('picoPublisherId');
    if (!empty($picoPublisherId)) {

      $head_script .= "<script>
    (function (p, i, c, o) {
        var n = new Event('pico-init');
        i[p] = i[p] ||
            function () {(i[p].queue = i[p].queue || []).push(arguments)}, i.document.addEventListener(
            'pico-init', function (e) {
                var t = i.Pico.getInstance(e, {publisherId: o, picoInit: n}, i)
                t.handleQueueItems(i[p].queue), i[p] = function () {return t.handleQueueItems([arguments])}
            }, !1);
        var e = i.document.createElement('script'), t = i.document.getElementsByTagName('script')[0];
        e.async = 1, e.src = c, e.onload = function (e) {
            return i.Pico.getInstance(e, {publisherId: o, picoInit: n}, i)
        }, t.parentNode.insertBefore(e, t)
    })('pico', window, \"https://widget.pico.tools/wrapper.min.js\", \"$picoPublisherId\");
</script>;";

      $terms = [];
      $picoOn = 'false';
      $picoType = 'page';
      $nid = 'null';
      $node = Drupal::routeMatch()->getParameter('node');
      if ($node instanceof NodeInterface) {
        if ($node->getType() == 'article') {
          $nid = $node->id();
          $page['#attached']['drupalSettings']['nid'] = $nid;
          $tids = $node->get('field_section')->getValue();
          $terms = ['article'];
          if (count($tids) > 0) {
            foreach ($tids as $tid) {
              $term = Term::load($tid['target_id']);
              $terms[] = $term->getName();
            }
          }
          $picoOn = 'true';
          $picoType = 'article';
        }
      }
      $picoCategories = json_encode($terms);
      $bottom_script .= "<script>
var pageInfo = {
	article: $picoOn,
	post_id: $nid,
	post_type: \"$picoType\",
	taxonomies: { tags: $picoCategories},
	url: window.location.href
};
window.pico('visit', pageInfo);
</script>";

    } // end if pico id
  } // end if pico module enabled

  $variables['head_script'] = $head_script;
  $variables['bottom_script'] = $bottom_script;
}

/**
 * Preprocess Nodes.
 *
 * @param $variables
 */
function etype_pico_preprocess_node(&$variables) {
  $config = Drupal::config('etype_pico.settings');
  $picoPublisherId = $config->get('picoPublisherId');
  if (!empty($picoPublisherId)) {
    $variables['picoEnabled'] = true;
  }
}

/**
 * Implements hook_page_attachments().
 *
 * Only show Pico pop-up/controls
 *
 * @param array $page
 */
function etype_pico_page_attachments(array &$page) {
  $moduleHandler = Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('etype_pico')) {
    $config = Drupal::config('etype_pico.settings');
    $picoPublisherId = $config->get('picoPublisherId');
    $page['#attached']['drupalSettings']['picoCategories'] = "";
    $page['#attached']['drupalSettings']['picoOn'] = false;
    $page['#attached']['drupalSettings']['picoType'] = 'page';
    if (!empty($picoPublisherId)) {
      $node = Drupal::routeMatch()->getParameter('node');
      if ($node instanceof NodeInterface) {
        if ($node->getType() == 'article') {
          $nid = $node->id();
          $page['#attached']['drupalSettings']['nid'] = $nid;
          $tids = $node->get('field_section')->getValue();
          $terms = ['article'];
          if (count($tids) > 0) {
            foreach ($tids as $tid) {
              $term = Term::load($tid['target_id']);
              $terms[] = $term->getName();
            }
          }
          $page['#attached']['drupalSettings']['picoCategories'] = json_encode($terms);
          $page['#attached']['drupalSettings']['picoOn'] = true;
          $page['#attached']['drupalSettings']['picoType'] = 'article';
        }
      }
      /* Attach library on every page load if Pico ID */
      // $page['#attached']['library'][] = 'etype_pico/pico';
    }
  }
}
