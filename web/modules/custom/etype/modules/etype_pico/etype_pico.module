<?php

use Drupal\etype_pico\Controller\EtypePicoEeditionController;
use Drupal\node\NodeInterface;
use Drupal\taxonomy\Entity\Term;
use Drupal\Core\Url;

/**
 * Preprocess html.
 *
 * @param $variables
 */
function etype_pico_preprocess_html(&$variables) {
  $current_user_roles = \Drupal::currentUser()->getRoles();
  if (!in_array('administrator', $current_user_roles)) {
    $e_config = Drupal::config('etype.adminsettings');
    $head_script = $e_config->get('head_script');
    $bottom_script = $e_config->get('bottom_script');
    $config = Drupal::config('etype_pico.settings');
    $picoPublisherId = $config->get('picoPublisherId');
    $types = $config->get('nodeTypes');
    $nodeTypes = [];
    if (is_countable($types)) {
      foreach ($types as $k => $v) {
        if (!empty($v)) {
          $nodeTypes[] = $v;
        }
      }
    }

    if (!empty($picoPublisherId)) {

      $head_script .= <<<EOF
<script>
(function(p,i,c,o){var n=new Event("pico-init");i[p]=i[p]||function(){(i[p].queue=i[p].queue||[]).push(arguments)},i.document.addEventListener("pico-init",function(e){var t=i.Pico.getInstance(e,{publisherId:o,picoInit:n},i);t.handleQueueItems(i[p].queue),i[p]=function(){return t.handleQueueItems([arguments])}},!1);var e=i.document.createElement("script"),t=i.document.getElementsByTagName("script")[0];e.async=1,e.src=c,e.onload=function(e){return i.Pico.getInstance(e,{publisherId:o,picoInit:n},i)},t.parentNode.insertBefore(e,t)})("pico",window,"https://widget.pico.tools/wrapper.min.js","$picoPublisherId");
</script>
EOF;

      /**
       * bottom script
       * see https://help.trypico.com/en/articles/3199263-installing-pico-on-your-website
       */
      $terms = [];
      $picoOn = 'false';
      $picoType = 'page';
      $nid = '0';
      $picoCategories = '[]';
      $node = Drupal::routeMatch()->getParameter('node');
      if ($node instanceof NodeInterface) {
        if (in_array($node->getType(), $nodeTypes)) {
          $nid = $node->id();
          if ($node->hasField('field_section')) {
            $tids = $node->get('field_section')->getValue();
            $terms = ['article'];
            if (is_countable($tids)) {
              foreach ($tids as $tid) {
                $term = Term::load($tid['target_id']);
                $terms[] = $term->getName();
              }
            }
          }
          $picoOn = 'true';
          $picoType = 'article';
        }
      }

      $bottom_script .= <<<EOF
<script>
var pageInfo = {
	article: $picoOn,
	post_id: $nid,
	post_type: "$picoType",
	taxonomies: { tags: $picoCategories },
	url: window.location.href
};
window.pico('visit', pageInfo);
</script>"
EOF;

    } // end if pico id

    $variables['head_script'] = $head_script;
    $variables['bottom_script'] = $bottom_script;
  }
}

/**
 * Preprocess Nodes.
 *
 * @param $variables
 */
function etype_pico_preprocess_node(&$variables) {
  $config = Drupal::config('etype_pico.settings');
  $picoPublisherId = $config->get('picoPublisherId');
  if (!empty($picoPublisherId)) {
    $variables['picoEnabled'] = TRUE;
  }
}

/**
 * Implements hook_page_attachments().
 *
 * @param array $page
 * @throws \SoapFault
 */
function etype_pico_page_attachments(array &$page) {
  $current_url = Url::fromRoute('<current>');
  $path = $current_url->toString();
  if ($path == '/e-edition') {
    $url = (new EtypePicoEeditionController)->getEeditionUrl();
    $page['#attached']['drupalSettings']['toknizdUrl'] = $url;
    $page['#attached']['library'][] = 'etype_pico/pico-auth';
  }
  $page['#attached']['library'][] = 'etype_pico/pico';
}
