<?php
/**
 * @file
 * eType Wire Content module file.
 *
 * TODO: Make View pick up settings for Groups and Site Name.
 */

use Drupal\Core\Database\Database;
use Drupal\etype_wire_content\Controller\WireContentExportController;
use Drupal\views\ViewExecutable;

/**
 * Callback function for the cron job.
 *
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function _etype_wire_content_node_export() {
  $job = new Drupal\etype_wire_content\Controller\WireContentExportController;
  $job->exportWireContent();
}

/**
 * Check database settings exist.
 *
 * @return bool
 */
function _etype_wire_content_check_connection() {
  return (bool) Database::getConnectionInfo('wire');
}

/**
 * @param \Drupal\node\NodeInterface $node
 * TODO: remove
 * @throws \Drupal\Component\Plugin\Exception\InvalidPluginDefinitionException
 * @throws \Drupal\Component\Plugin\Exception\PluginNotFoundException
 */
function etype_wire_content_node_update(Drupal\node\NodeInterface $node) {
  $exporter = new WireContentExportController();
  $exporter->exportWireContent();
}

/**
 * Refresh Wire Content on loading View
 * @param ViewExecutable $view
 * @param $display_id
 * @param array $args
 */
function etype_wire_content_views_pre_view(ViewExecutable $view, $display_id, array &$args) {
  if ($view->id() == 'wire_content') {
    $config = Drupal::config('system.site');
    $site_name = $config->get('name');
    $config = Drupal::config('etype_wire_content.settings');
    $groups = $config->get('groups');
    $groupsArr = [];
    /* $groupsArr should be simple array of actual groups */
    foreach ($groups as $group) {
      if ($group !== 0) {
        $groupsArr[] .= $group;
      }
    }
    Database::setActiveConnection('wire');
    $db = Database::getConnection();
    $query = $db->select('wire_node', 'w')->fields('w', ['site']);
    $query->condition('site_name', $site_name, '!=');
    foreach ($groupsArr as $g) {
      $query->condition('groups', "%" . $query->escapeLike($g) . "%", 'LIKE');
    }
    $query->distinct();
    $result = $query->execute()->fetchAll();
    if (is_countable($result)) {
      foreach ($result as $site) {
        $url = 'https://' . $site->site . "/export_wire_content";
        $ch = curl_init($url);
        curl_setopt($ch,CURLOPT_RETURNTRANSFER, true);
        curl_setopt($ch, CURLOPT_VERBOSE, false);
        curl_exec($ch);
      }
    }
    /* Reset connection. */
    Database::setActiveConnection();
  }
}

/**
 * Filter Wire Content to remove site's own stories and only show stories from papers in selected Groups.
 *
 * @param $view
 * @param $query
 */
function etype_wire_content_views_query_alter($view, $query) {
  if ($view->id() == 'wire_content') {
    $config = Drupal::config('etype_wire_content.settings');
    $groups = $config->get('groups');
    $host = Drupal::request()->getHost();
    $arr = explode(".", $host);;
    if (strpos($arr[1], 'etypegoogle') !== false) {
      $site = $arr[0];
    } else {
      $site = $arr[1];
    }
    // Check for existing filters
    $groupNumber = 0;
    foreach ($query->where as $condition) {
      $groupNumber ++;
    }
    $groupNumber ++;
    $query->addWhere($groupNumber, 'wire_node.site', "%$site%", 'NOT LIKE');
    $groupNumber ++;
    $query->setWhereGroup('OR', $groupNumber);
    foreach ($groups as $group) {
      if (strlen($group) > 1) {
        $query->addWhere($groupNumber, 'wire_node.groups', "%$group%", 'LIKE');
      }
    }
  }
}
